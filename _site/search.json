[
  {
    "objectID": "Project/Project_Proposal/Project_Proposal.html",
    "href": "Project/Project_Proposal/Project_Proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "In December 29, 2024, Singapore residents were concerned with flash flood, which happened in Bukit Timah area, triggered by heavy rainfall. This flood has brought many people’s attention towards the increasing frequency of rainfall. PUB (Public Utilities Board) highlighted that the Bukit Timah area is prone to flooding, and the drainage system improvement works has been ongoing over the past decade. They have also issued flood risk warnings for nearly 20 location points, including Bukit Timah and Toa Payoh area, as well as western and central areas. This extreme climate change has influenced weather patterns. Singapore faces many challenges managing these weather fluctuations to minimize the impact towards their residents and the landscapes. (source: Channel News Asia)\n\n\n\nAs weather enthusiasts, who have high curiosity on weather changes and impacts towards the daily life of Singapore residents, our team has decided to further deep-dive into weather data, unveiling the pattern of rainfalls and exploring the association between rainfall patterns and flood risks, to avoid potential future floods happening in Singapore. As Singapore is a tropical country, Singapore is iconic for its high humidity, leading to frequent rainfalls. As the climate continue to evolve, understanding the historical rainfall patterns is crucial for either residents’ activities, urban planning and even safeguarding public facilities. Hence, by carefully processing weather data and visualising it, our team aims to develop enhanced Shiny app for several purposes, to raise residents’ awareness towards rainfall periods, carefully planning their activities, and also to support key government decisions influenced by weather conditions.\n\n\n\n\nTo create a data-driven visual storyboard, our team will use Shiny App to present our findings, and the following dataset will be utilized to support our analysis:\n\nSingapore’s Weather Data\n\nSource: Historical Daily Weather Records\nFile Type: csv file\n\nSingapore’s Geospatial Boundaries Data\n\nSource: Master Plan 2014 Planning Area Boundary\nFile Type: shp file\n\n\nTo further enhance our analysis, our team might possibly use additional datasets to present meaningful findings. According to our analysis, our team is also evaluating several datasets to determine if reliable sources and data are available, which will be further discussed during the process of building our project. The following are the dataset topics that might be considered:\n\nSea Level Changes in Singapore Coastal Areas\nPopulation Density across Singapore Regions\n\n\n\n\n\n\nOur team aims to use visual analytics methods, from both methodology taught in ISSS608 Visual Analytics and Application course and other external sources that our team can refer to. Our team aims to use methods such as time-series analysis, geospatial mapping and descriptive visualisations using R libraries such as:\n\nDescriptive Visuals: ggplot2, shiny, plotly, etc\nGeospatial Mapping: tmap, sf\nTime-series Analysis: tsibble, feasts, seasonal, lubridate\n\nThese R packages will be carefully utilized according to our analysis needs during the project work.\n\n\n\nOur team has created a rough storyboard and carefully planned the flow of our analysis, to ease readers in understanding the presented visuals. Our team will begin with geospatial mapping, to see the overall rainfall patterns across Singapore’s regions. Through the geospatial mapping, we will find out regions with highest frequency of rainfall, highlighting areas that requires extra attention. The storyboard will continue with several time-series analysis, unveiling the weather patterns of different regions and areas in Singapore. After the overall analysis, we will zoom in to certain areas that have higher frequency of rainfalls, analysing starting from monthly, weekly, to the daily records. In addition, our team will also analyse the intensity level of the rainfall (heavy/ light rains) in these highlighted areas. By combining visualisation methods both listed in this proposal and other potential visualisation methods that we might explore during the process, our team will unveil the hidden patterns and cause of weather issues in Singapore.\n\n\n\n\nOur team aims to present as detailed findings as possible through these data visualisations. However, there are several limitations that we found during the dataset exploration and topic exploration. The weather data provided by Meteorological Service Singapore’s website has several issues. Out of the 63 regions listed, 19 regions do not have weather records at all, and 27 regions have rainfall records, but not temperature data, which could have enhanced our analysis. To tackle this, we will select regions in each administrative district that have complete data. There is also another challenge in this dataset. The website provides monthly records of each region, hence, our team will need to extract the data monthly and merge it during the process. Our team will carefully select and extract the required data accordingly.\n\n\n\nOur team has explored some of the relevant works that could improve our methods in our work and to give us more room for exploration ideas in our analysis. The following are list of relevant works that we found useful:\n\nVisual Analysis of Spatio-Temporal Data: Applications in Weather Forecasting\nThis research paper has given us several useful creative methods of visualising weather data. For example, the minimap timeline for weather forecast is an interesting visuals to be presented, showing a short-term weather forecast. The research paper also used curve-pattern analysis to identify historical trends of weathers for the purpose of forecasting future weathers. Although the main topic for this paper is related to weather forecasting, their methods of analysing historical data is a useful resource to refer to.\nA Visual Analytics Pipeline for the Identification and Exploration of Extreme Weather Events from Social Media Data\nThis research paper shows a detailed weather analysis for extreme weather events, which also includes floods and other extreme weather events. This paper utilizes interactive visualisation techniques to improve the quality of weather warnings. Their methods in visualising extreme weather events using geospatial mapping is well-thought, making this a useful resource for our team to learn from this paper. It utilizes different colors and details of the visuals very well for audience to understand the meaning behind the visuals presented."
  },
  {
    "objectID": "Project/Project_Proposal/Project_Proposal.html#overview",
    "href": "Project/Project_Proposal/Project_Proposal.html#overview",
    "title": "Project Proposal",
    "section": "",
    "text": "In December 29, 2024, Singapore residents were concerned with flash flood, which happened in Bukit Timah area, triggered by heavy rainfall. This flood has brought many people’s attention towards the increasing frequency of rainfall. PUB (Public Utilities Board) highlighted that the Bukit Timah area is prone to flooding, and the drainage system improvement works has been ongoing over the past decade. They have also issued flood risk warnings for nearly 20 location points, including Bukit Timah and Toa Payoh area, as well as western and central areas. This extreme climate change has influenced weather patterns. Singapore faces many challenges managing these weather fluctuations to minimize the impact towards their residents and the landscapes. (source: Channel News Asia)\n\n\n\nAs weather enthusiasts, who have high curiosity on weather changes and impacts towards the daily life of Singapore residents, our team has decided to further deep-dive into weather data, unveiling the pattern of rainfalls and exploring the association between rainfall patterns and flood risks, to avoid potential future floods happening in Singapore. As Singapore is a tropical country, Singapore is iconic for its high humidity, leading to frequent rainfalls. As the climate continue to evolve, understanding the historical rainfall patterns is crucial for either residents’ activities, urban planning and even safeguarding public facilities. Hence, by carefully processing weather data and visualising it, our team aims to develop enhanced Shiny app for several purposes, to raise residents’ awareness towards rainfall periods, carefully planning their activities, and also to support key government decisions influenced by weather conditions."
  },
  {
    "objectID": "Project/Project_Proposal/Project_Proposal.html#dataset",
    "href": "Project/Project_Proposal/Project_Proposal.html#dataset",
    "title": "Project Proposal",
    "section": "",
    "text": "To create a data-driven visual storyboard, our team will use Shiny App to present our findings, and the following dataset will be utilized to support our analysis:\n\nSingapore’s Weather Data\n\nSource: Historical Daily Weather Records\nFile Type: csv file\n\nSingapore’s Geospatial Boundaries Data\n\nSource: Master Plan 2014 Planning Area Boundary\nFile Type: shp file\n\n\nTo further enhance our analysis, our team might possibly use additional datasets to present meaningful findings. According to our analysis, our team is also evaluating several datasets to determine if reliable sources and data are available, which will be further discussed during the process of building our project. The following are the dataset topics that might be considered:\n\nSea Level Changes in Singapore Coastal Areas\nPopulation Density across Singapore Regions"
  },
  {
    "objectID": "Project/Project_Proposal/Project_Proposal.html#methodology",
    "href": "Project/Project_Proposal/Project_Proposal.html#methodology",
    "title": "Project Proposal",
    "section": "",
    "text": "Our team aims to use visual analytics methods, from both methodology taught in ISSS608 Visual Analytics and Application course and other external sources that our team can refer to. Our team aims to use methods such as time-series analysis, geospatial mapping and descriptive visualisations using R libraries such as:\n\nDescriptive Visuals: ggplot2, shiny, plotly, etc\nGeospatial Mapping: tmap, sf\nTime-series Analysis: tsibble, feasts, seasonal, lubridate\n\nThese R packages will be carefully utilized according to our analysis needs during the project work.\n\n\n\nOur team has created a rough storyboard and carefully planned the flow of our analysis, to ease readers in understanding the presented visuals. Our team will begin with geospatial mapping, to see the overall rainfall patterns across Singapore’s regions. Through the geospatial mapping, we will find out regions with highest frequency of rainfall, highlighting areas that requires extra attention. The storyboard will continue with several time-series analysis, unveiling the weather patterns of different regions and areas in Singapore. After the overall analysis, we will zoom in to certain areas that have higher frequency of rainfalls, analysing starting from monthly, weekly, to the daily records. In addition, our team will also analyse the intensity level of the rainfall (heavy/ light rains) in these highlighted areas. By combining visualisation methods both listed in this proposal and other potential visualisation methods that we might explore during the process, our team will unveil the hidden patterns and cause of weather issues in Singapore."
  },
  {
    "objectID": "Project/Project_Proposal/Project_Proposal.html#limitations-and-challenges",
    "href": "Project/Project_Proposal/Project_Proposal.html#limitations-and-challenges",
    "title": "Project Proposal",
    "section": "",
    "text": "Our team aims to present as detailed findings as possible through these data visualisations. However, there are several limitations that we found during the dataset exploration and topic exploration. The weather data provided by Meteorological Service Singapore’s website has several issues. Out of the 63 regions listed, 19 regions do not have weather records at all, and 27 regions have rainfall records, but not temperature data, which could have enhanced our analysis. To tackle this, we will select regions in each administrative district that have complete data. There is also another challenge in this dataset. The website provides monthly records of each region, hence, our team will need to extract the data monthly and merge it during the process. Our team will carefully select and extract the required data accordingly."
  },
  {
    "objectID": "Project/Project_Proposal/Project_Proposal.html#relevant-works",
    "href": "Project/Project_Proposal/Project_Proposal.html#relevant-works",
    "title": "Project Proposal",
    "section": "",
    "text": "Our team has explored some of the relevant works that could improve our methods in our work and to give us more room for exploration ideas in our analysis. The following are list of relevant works that we found useful:\n\nVisual Analysis of Spatio-Temporal Data: Applications in Weather Forecasting\nThis research paper has given us several useful creative methods of visualising weather data. For example, the minimap timeline for weather forecast is an interesting visuals to be presented, showing a short-term weather forecast. The research paper also used curve-pattern analysis to identify historical trends of weathers for the purpose of forecasting future weathers. Although the main topic for this paper is related to weather forecasting, their methods of analysing historical data is a useful resource to refer to.\nA Visual Analytics Pipeline for the Identification and Exploration of Extreme Weather Events from Social Media Data\nThis research paper shows a detailed weather analysis for extreme weather events, which also includes floods and other extreme weather events. This paper utilizes interactive visualisation techniques to improve the quality of weather warnings. Their methods in visualising extreme weather events using geospatial mapping is well-thought, making this a useful resource for our team to learn from this paper. It utilizes different colors and details of the visuals very well for audience to understand the meaning behind the visuals presented."
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes2.html",
    "href": "Project/Meeting_Minutes/Meeting_Minutes2.html",
    "title": "Meeting Minutes 2",
    "section": "",
    "text": "Date: March 7, 2025\nAttendees: Brigitta Karen Tsai, Enrico Limberg, Hannah\nAgenda: Finalising Topic and Visual Storyboard"
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes2.html#review-of-available-topics-discussions",
    "href": "Project/Meeting_Minutes/Meeting_Minutes2.html#review-of-available-topics-discussions",
    "title": "Meeting Minutes 2",
    "section": "2.1 Review of Available Topics Discussions",
    "text": "2.1 Review of Available Topics Discussions\n\nBrigitta: Examined the first topic, PISA 2022, and determined it was not a suitable choice due to:\n\nThe complexity and extensiveness of the dataset, primarily questionnaire based.\nThe high level of data manipulation and preprocessing required.\nTask: Brigitta to document key challenges and findings.\nConclusion: The team decided to drop this topic.\n\nEnrico & Hannah: Explored the second topic, Be Weatherwise or Otherwise, and found challenges due to:\n\nData being too scattered (recorded on a monthly basis), making it hard to analyze long-term trends.\nClimate trends being influenced by multiple external factors not fully captured in the dataset.\nTask: Enrico and Hannah to summarize the data gaps and challenges."
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes2.html#assessment-of-data-availability",
    "href": "Project/Meeting_Minutes/Meeting_Minutes2.html#assessment-of-data-availability",
    "title": "Meeting Minutes 2",
    "section": "2.2 Assessment of Data Availability",
    "text": "2.2 Assessment of Data Availability\n\nBrigitta and Hannah explored two potential extensions, “Impact of Climate Change on Carbon Emissions” and “Impact of Carbon Emissions on Climate Change”. Both extensions faced data fragmentation issues and lack of comprehensive datasets.\nBrigitta and Hannah expressed concerns that the Be Weatherwise topic would be overwhelming due to the need for large datasets.\nEnrico provided a different perspective. He suggested that instead of analyzing all areas, the team could focus on specific key areas based on available data such as dengue fever, coastal areas, and flood-prone regions. This approach would narrow the scope and make the project more manageable, despite the fragmentation in the available datasets.\nEnrico to explore how to refine the focus based on specific areas. 3. Formulation of Problem Statement\nBrigitta and Hannah investigated the impact of Changi’s weather data on flight arrivals and departures.\nBrigitta, Enrico, and Hannah realized it was too much to collect all the flight data, leading to a reconsideration of the topic.\nEnrico exolored the impact of rain intensity in specific Singapore areas on rising sea levels (coastal impact analysis), Dengue fever outbreaks (potential mosquito breeding correlations), Rising temperatures and urban heat island effects.\nBrigitta then questioned how to identify the areas with the highest dengue cases.\nEnrico suggested analyzing dengue fever cases first, then selecting the area for further data collection.\nBrigitta reviewed available dengue data sources, but only found records from 2014 to 2018.\nHannah verified the fact that there is no more recent datas on dengue.\nBrigitta and Enrico researched flood-prone areas in Singapore to refine focus.\nBrigitta, Enrico and Hannah chose to focus only on rising temperatures, rising sea levels and flood risks.\nEnrico drafted initial problem statement."
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes2.html#formulation-of-problem-statement",
    "href": "Project/Meeting_Minutes/Meeting_Minutes2.html#formulation-of-problem-statement",
    "title": "Meeting Minutes 2",
    "section": "2.3 Formulation of Problem Statement",
    "text": "2.3 Formulation of Problem Statement\n\nBrigitta and Hannah investigated the impact of Changi’s weather data on flight arrivals and departures.\nBrigitta, Enrico, and Hannah realized it was too much to collect all the flight data, leading to a reconsideration of the topic.\nEnrico exolored the impact of rain intensity in specific Singapore areas on rising sea levels (coastal impact analysis), Dengue fever outbreaks (potential mosquito breeding correlations), Rising temperatures and urban heat island effects.\nBrigitta then questioned how to identify the areas with the highest dengue cases.\nEnrico suggested analyzing dengue fever cases first, then selecting the area for further data collection.\nBrigitta reviewed available dengue data sources, but only found records from 2014 to 2018.\nHannah verified the fact that there is no more recent datas on dengue. • Brigitta and Enrico researched flood-prone areas in Singapore to refine focus.\nBrigitta, Enrico and Hannah chose to focus only on rising temperatures, rising sea levels and flood risks.\nEnrico drafted initial problem statement."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Application Group 1",
    "section": "",
    "text": "Welcome to the main page of Visual Analytics and Application, Group 1 Project website"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes1.html",
    "href": "Project/Meeting_Minutes/Meeting_Minutes1.html",
    "title": "Meeting Minutes 1",
    "section": "",
    "text": "Date: March 4, 2025\nAttendees: Brigitta Karen Tsai (BK), ENRICO LIMBERG (EL), Hannah (HH)\nAgenda:\n\nLooking into Different Topic and Dataset\nEvaluating Data Availability\n\n\n\n\n\nBK: Examinate First Topic - PISA 2022 (Not to choose)\n\nThe dataset is quite complex and extensive, as it consists mainly of questionnaire-based data.\nDue to the heavy data manipulation and preprocessing required, the team decided not to pursue this topic.\n\nEL & HH: Second Topic - Be Weatherwise or Otherwise\n\nSome of the data we are interested in is too scattered, as it is recorded on a monthly basis, making it challenging to predict long-term annual trends.\nClimate trends are influenced by multiple external factors (e.g., human activities, government policies, global climate patterns), which are not fully captured in the dataset, making it difficult to establish direct causal relationships.\n\n\n\n\nBK / EL / HH:\nThe team explored two extensions of the second topic:\n\nImpact of Climate Change on Carbon Emissions\nImpact of Carbon Emissions on Climate Change\n\nHowever, due to data fragmentation and lack of comprehensive datasets, the team found data availability unsuitable and decided to consider other topics.\n\n\n\n\nAfter this meeting, we have decided to try running trial codes to see the areas that we can explore in the weather dataset. We still take into consideration other dataset that we find interesting."
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes1.html#discussion-summary",
    "href": "Project/Meeting_Minutes/Meeting_Minutes1.html#discussion-summary",
    "title": "Meeting Minutes 1",
    "section": "",
    "text": "BK: Examinate First Topic - PISA 2022 (Not to choose)\n\nThe dataset is quite complex and extensive, as it consists mainly of questionnaire-based data.\nDue to the heavy data manipulation and preprocessing required, the team decided not to pursue this topic.\n\nEL & HH: Second Topic - Be Weatherwise or Otherwise\n\nSome of the data we are interested in is too scattered, as it is recorded on a monthly basis, making it challenging to predict long-term annual trends.\nClimate trends are influenced by multiple external factors (e.g., human activities, government policies, global climate patterns), which are not fully captured in the dataset, making it difficult to establish direct causal relationships.\n\n\n\n\nBK / EL / HH:\nThe team explored two extensions of the second topic:\n\nImpact of Climate Change on Carbon Emissions\nImpact of Carbon Emissions on Climate Change\n\nHowever, due to data fragmentation and lack of comprehensive datasets, the team found data availability unsuitable and decided to consider other topics."
  },
  {
    "objectID": "Project/Meeting_Minutes/Meeting_Minutes1.html#conclusion",
    "href": "Project/Meeting_Minutes/Meeting_Minutes1.html#conclusion",
    "title": "Meeting Minutes 1",
    "section": "",
    "text": "After this meeting, we have decided to try running trial codes to see the areas that we can explore in the weather dataset. We still take into consideration other dataset that we find interesting."
  },
  {
    "objectID": "Project/Project_Code/Project_Code.html",
    "href": "Project/Project_Code/Project_Code.html",
    "title": "Project_Code",
    "section": "",
    "text": "pacman::p_load(rvest,dplyr,stringr,purrr,\n               readr,httr,tidyr,fs,janitor,\n               tidyverse,knitr)\n\n\n\n\n\n#This is the code where I downloaded the data：\nbase_url &lt;- \"https://www.weather.gov.sg/files/dailydata/\"\n\n# Site corresponding file code\nstations &lt;- c(\"Changi\"=\"S24\", \"Ang Mo Kio\"=\"S109\", \"Pulau Ubin\"=\"S106\", \n              \"East Coast Parkway\"=\"S107\", \"Seletar\"=\"S25\",\n              \"Clementi\"=\"S50\", \"Jurong (West)\"=\"S44\", \"Paya Lebar\"=\"S06\",\n              \"Newton\"=\"S111\", \"Pasir Panjang\"=\"S116\", \"Tai Seng\"=\"S43\",\n              \"Admiralty\" = \"S104\", \"Sembawang\" = \"S80\", \"Sentosa Island\" = \"S60\",\n              \"Jurong Island\" = \"S117\", \"Choa Chu Kang (South)\"=\"S121\",\n              \"Tuas South\"=\"S115\")\n\n# Define download time range\nyears &lt;- 2024:2024\nmonths &lt;- sprintf(\"%02d\", 1:12)  # 01, 02, ..., 12\n\n# Only data from January 2024 to December 2024 are retained\ndate_combinations &lt;- expand.grid(Year = years, Month = months, stringsAsFactors = FALSE) %&gt;%\n  filter(!(Year == 2024 & Month &lt; \"01\"), # Exclude before Jan 2024\n         !(Year == 2024 & Month &gt; \"12\")) # Exclude after Dec 2024\n\n# Create a directory to store data\ndir.create(\"data\", showWarnings = FALSE)\n\n# Record failed downloads\nfailed_downloads &lt;- data.frame(Station = character(), Year = integer(), Month = character(), File_URL = character(), stringsAsFactors = FALSE)\n\n# Iterate through stations, years, and months\nfor (station_name in names(stations)) {\n  station_code &lt;- stations[[station_name]]\n  \n  for (i in 1:nrow(date_combinations)) {\n    year &lt;- date_combinations$Year[i]\n    month &lt;- date_combinations$Month[i]\n    \n    # Construct the file name\n    file_name &lt;- paste0(\"DAILYDATA_\", station_code, \"_\", year, month, \".csv\")\n    \n    # Construct the full download URL\n    file_url &lt;- paste0(base_url, file_name)\n\n    # Local save path\n    file_path &lt;- file.path(\"data\", file_name)\n    \n    # Check if the URL is valid\n    response &lt;- HEAD(file_url)\n    \n    if (status_code(response) == 200) {\n      # Download the file\n      download.file(file_url, destfile = file_path, mode = \"wb\")\n      cat(\"✅ Download successful:\", file_name, \"\\n\")\n    } else {\n      cat(\"❌ Download failed:\", file_name, \"\\n\")\n      \n      # Record the failed file\n      failed_downloads &lt;- rbind(failed_downloads, data.frame(\n        Station = station_name,\n        Year = year,\n        Month = month,\n        File_URL = file_url\n      ))\n    }\n  }\n}\n\n# Save the failed download log\nif (nrow(failed_downloads) &gt; 0) {\n  write.csv(failed_downloads, \"data/failed_downloads_log.csv\", row.names = FALSE)\n  cat(\"⚠️ The failed download files have been recorded: data/failed_downloads_log.csv\\n\")\n} else {\n  cat(\"🎉 All data downloaded successfully!\\n\")\n}\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(janitor)\n\n# Get all CSV files from the \"data\" folder that contain \"DAILYDATA_\" and \"2024\" in their names\nfiles &lt;- list.files(\"data\", pattern = \"^DAILYDATA_.*_2024.*\\\\.csv$\", full.names = TRUE)\n\n# Define a safe reading function to ensure all columns are initially read as characters\nsafe_read &lt;- safely(~ read_csv(\n  .x,\n  col_types = cols(.default = \"c\"),  # Read all columns as character to prevent merging errors\n  locale = locale(encoding = \"UTF-8\")  # Ensure UTF-8 encoding\n) %&gt;%\n  clean_names())  # Standardize column names\n\n# Read all files\nresults &lt;- map(files, safe_read)\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n# Filter out successful reads and combine data\nall_data &lt;- results %&gt;%\n  keep(~ is.null(.x$error)) %&gt;%  # Keep only successfully read files\n  map_dfr(\"result\") %&gt;%  # Combine them into a single dataframe\n  mutate(across(where(is.character) & !matches(\"station\"), ~ na_if(., \"-\"))) %&gt;%  # Convert \"-\" to NA (except for \"station\" column)\n  mutate(across(where(is.character) & !matches(\"station\"), as.numeric))  # Convert character columns back to numeric (except \"station\")\n\n# Check the merged data structure\nglimpse(all_data)\n\nRows: 2,928\nColumns: 13\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, …\n$ month                       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ day                         &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,…\n$ daily_rainfall_total_mm     &lt;dbl&gt; 21.6, 0.0, 1.6, 63.8, 4.4, 3.0, 59.8, 0.0,…\n$ highest_30_min_rainfall_mm  &lt;dbl&gt; 9.2, 0.0, 1.6, 13.8, 1.6, 3.0, 15.4, 0.0, …\n$ highest_60_min_rainfall_mm  &lt;dbl&gt; 13.2, 0.0, 1.6, 19.8, 3.0, 3.0, 17.4, 0.0,…\n$ highest_120_min_rainfall_mm &lt;dbl&gt; 14.6, 0.0, 1.6, 26.6, 3.2, 3.0, 21.8, 0.0,…\n$ mean_temperature_c          &lt;dbl&gt; 25.9, 27.8, 27.7, 25.0, 26.8, 28.1, 24.6, …\n$ maximum_temperature_c       &lt;dbl&gt; 28.8, 32.6, 32.6, 26.9, 30.8, 33.1, 27.3, …\n$ minimum_temperature_c       &lt;dbl&gt; 24.5, 24.2, 25.5, 23.7, 24.5, 24.9, 23.5, …\n$ mean_wind_speed_km_h        &lt;dbl&gt; 6.5, 7.0, 7.1, 7.2, 8.4, 7.6, 4.9, 8.5, 7.…\n$ max_wind_speed_km_h         &lt;dbl&gt; 24.1, 31.5, 29.6, 25.9, 35.2, 27.8, 18.5, …\n\n\n\n\n\n\nwrite_csv(all_data, \"data/weather.csv\", na = \"\", col_names = TRUE)\n\n\n\n\n\n# Delete all CSV files in the \"data\" folder\nfile.remove(list.files(\"data\", pattern = \"^DAILYDATA_.*_2024.*\\\\.csv$\", full.names = TRUE))\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[91] TRUE TRUE TRUE TRUE TRUE TRUE\n\ncat(\"🗑️ All individual CSV files have been deleted.\\n\")\n\n🗑️ All individual CSV files have been deleted."
  },
  {
    "objectID": "Project/Project_Code/Project_Code.html#install-and-load-r-packages",
    "href": "Project/Project_Code/Project_Code.html#install-and-load-r-packages",
    "title": "Project_Code",
    "section": "",
    "text": "pacman::p_load(rvest,dplyr,stringr,purrr,\n               readr,httr,tidyr,fs,janitor,\n               tidyverse,knitr)"
  },
  {
    "objectID": "Project/Project_Code/Project_Code.html#download-data",
    "href": "Project/Project_Code/Project_Code.html#download-data",
    "title": "Project_Code",
    "section": "",
    "text": "#This is the code where I downloaded the data：\nbase_url &lt;- \"https://www.weather.gov.sg/files/dailydata/\"\n\n# Site corresponding file code\nstations &lt;- c(\"Changi\"=\"S24\", \"Ang Mo Kio\"=\"S109\", \"Pulau Ubin\"=\"S106\", \n              \"East Coast Parkway\"=\"S107\", \"Seletar\"=\"S25\",\n              \"Clementi\"=\"S50\", \"Jurong (West)\"=\"S44\", \"Paya Lebar\"=\"S06\",\n              \"Newton\"=\"S111\", \"Pasir Panjang\"=\"S116\", \"Tai Seng\"=\"S43\",\n              \"Admiralty\" = \"S104\", \"Sembawang\" = \"S80\", \"Sentosa Island\" = \"S60\",\n              \"Jurong Island\" = \"S117\", \"Choa Chu Kang (South)\"=\"S121\",\n              \"Tuas South\"=\"S115\")\n\n# Define download time range\nyears &lt;- 2024:2024\nmonths &lt;- sprintf(\"%02d\", 1:12)  # 01, 02, ..., 12\n\n# Only data from January 2024 to December 2024 are retained\ndate_combinations &lt;- expand.grid(Year = years, Month = months, stringsAsFactors = FALSE) %&gt;%\n  filter(!(Year == 2024 & Month &lt; \"01\"), # Exclude before Jan 2024\n         !(Year == 2024 & Month &gt; \"12\")) # Exclude after Dec 2024\n\n# Create a directory to store data\ndir.create(\"data\", showWarnings = FALSE)\n\n# Record failed downloads\nfailed_downloads &lt;- data.frame(Station = character(), Year = integer(), Month = character(), File_URL = character(), stringsAsFactors = FALSE)\n\n# Iterate through stations, years, and months\nfor (station_name in names(stations)) {\n  station_code &lt;- stations[[station_name]]\n  \n  for (i in 1:nrow(date_combinations)) {\n    year &lt;- date_combinations$Year[i]\n    month &lt;- date_combinations$Month[i]\n    \n    # Construct the file name\n    file_name &lt;- paste0(\"DAILYDATA_\", station_code, \"_\", year, month, \".csv\")\n    \n    # Construct the full download URL\n    file_url &lt;- paste0(base_url, file_name)\n\n    # Local save path\n    file_path &lt;- file.path(\"data\", file_name)\n    \n    # Check if the URL is valid\n    response &lt;- HEAD(file_url)\n    \n    if (status_code(response) == 200) {\n      # Download the file\n      download.file(file_url, destfile = file_path, mode = \"wb\")\n      cat(\"✅ Download successful:\", file_name, \"\\n\")\n    } else {\n      cat(\"❌ Download failed:\", file_name, \"\\n\")\n      \n      # Record the failed file\n      failed_downloads &lt;- rbind(failed_downloads, data.frame(\n        Station = station_name,\n        Year = year,\n        Month = month,\n        File_URL = file_url\n      ))\n    }\n  }\n}\n\n# Save the failed download log\nif (nrow(failed_downloads) &gt; 0) {\n  write.csv(failed_downloads, \"data/failed_downloads_log.csv\", row.names = FALSE)\n  cat(\"⚠️ The failed download files have been recorded: data/failed_downloads_log.csv\\n\")\n} else {\n  cat(\"🎉 All data downloaded successfully!\\n\")\n}"
  },
  {
    "objectID": "Project/Project_Code/Project_Code.html#merge-data",
    "href": "Project/Project_Code/Project_Code.html#merge-data",
    "title": "Project_Code",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\n\n# Get all CSV files from the \"data\" folder that contain \"DAILYDATA_\" and \"2024\" in their names\nfiles &lt;- list.files(\"data\", pattern = \"^DAILYDATA_.*_2024.*\\\\.csv$\", full.names = TRUE)\n\n# Define a safe reading function to ensure all columns are initially read as characters\nsafe_read &lt;- safely(~ read_csv(\n  .x,\n  col_types = cols(.default = \"c\"),  # Read all columns as character to prevent merging errors\n  locale = locale(encoding = \"UTF-8\")  # Ensure UTF-8 encoding\n) %&gt;%\n  clean_names())  # Standardize column names\n\n# Read all files\nresults &lt;- map(files, safe_read)\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 9 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 10 is invalid UTF-8\n\n\nWarning in grepl(x = string, pattern = current_unicode, fixed = TRUE): input\nstring 11 is invalid UTF-8\n\n# Filter out successful reads and combine data\nall_data &lt;- results %&gt;%\n  keep(~ is.null(.x$error)) %&gt;%  # Keep only successfully read files\n  map_dfr(\"result\") %&gt;%  # Combine them into a single dataframe\n  mutate(across(where(is.character) & !matches(\"station\"), ~ na_if(., \"-\"))) %&gt;%  # Convert \"-\" to NA (except for \"station\" column)\n  mutate(across(where(is.character) & !matches(\"station\"), as.numeric))  # Convert character columns back to numeric (except \"station\")\n\n# Check the merged data structure\nglimpse(all_data)\n\nRows: 2,928\nColumns: 13\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, …\n$ month                       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ day                         &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,…\n$ daily_rainfall_total_mm     &lt;dbl&gt; 21.6, 0.0, 1.6, 63.8, 4.4, 3.0, 59.8, 0.0,…\n$ highest_30_min_rainfall_mm  &lt;dbl&gt; 9.2, 0.0, 1.6, 13.8, 1.6, 3.0, 15.4, 0.0, …\n$ highest_60_min_rainfall_mm  &lt;dbl&gt; 13.2, 0.0, 1.6, 19.8, 3.0, 3.0, 17.4, 0.0,…\n$ highest_120_min_rainfall_mm &lt;dbl&gt; 14.6, 0.0, 1.6, 26.6, 3.2, 3.0, 21.8, 0.0,…\n$ mean_temperature_c          &lt;dbl&gt; 25.9, 27.8, 27.7, 25.0, 26.8, 28.1, 24.6, …\n$ maximum_temperature_c       &lt;dbl&gt; 28.8, 32.6, 32.6, 26.9, 30.8, 33.1, 27.3, …\n$ minimum_temperature_c       &lt;dbl&gt; 24.5, 24.2, 25.5, 23.7, 24.5, 24.9, 23.5, …\n$ mean_wind_speed_km_h        &lt;dbl&gt; 6.5, 7.0, 7.1, 7.2, 8.4, 7.6, 4.9, 8.5, 7.…\n$ max_wind_speed_km_h         &lt;dbl&gt; 24.1, 31.5, 29.6, 25.9, 35.2, 27.8, 18.5, …"
  },
  {
    "objectID": "Project/Project_Code/Project_Code.html#save-to-csv-file",
    "href": "Project/Project_Code/Project_Code.html#save-to-csv-file",
    "title": "Project_Code",
    "section": "",
    "text": "write_csv(all_data, \"data/weather.csv\", na = \"\", col_names = TRUE)"
  },
  {
    "objectID": "Project/Project_Code/Project_Code.html#remove-individual-files",
    "href": "Project/Project_Code/Project_Code.html#remove-individual-files",
    "title": "Project_Code",
    "section": "",
    "text": "# Delete all CSV files in the \"data\" folder\nfile.remove(list.files(\"data\", pattern = \"^DAILYDATA_.*_2024.*\\\\.csv$\", full.names = TRUE))\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[91] TRUE TRUE TRUE TRUE TRUE TRUE\n\ncat(\"🗑️ All individual CSV files have been deleted.\\n\")\n\n🗑️ All individual CSV files have been deleted."
  }
]